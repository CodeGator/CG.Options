{
  "api/CG.Options.html": {
    "href": "api/CG.Options.html",
    "title": "Namespace CG.Options",
    "keywords": "Namespace CG.Options Classes OptionsBase This class represents a validatable set of configuration settings."
  },
  "api/CG.Options.OptionsBase.html": {
    "href": "api/CG.Options.OptionsBase.html",
    "title": "Class OptionsBase",
    "keywords": "Class OptionsBase This class represents a validatable set of configuration settings. Inheritance System.Object CG.DataAnnotations.ValidatableObject OptionsBase Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Options Assembly : CG.Options.dll Syntax public abstract class OptionsBase : ValidatableObject, IValidatableObject Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type."
  },
  "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions",
    "keywords": "Class ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type. Inheritance System.Object ServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.DependencyInjection Assembly : CG.Options.dll Syntax public static class ServiceCollectionExtensions Methods Configure<TOptions>(IServiceCollection, IConfiguration) This method attempts to configure the specified options as a singleton service with the specified service collection. The options are validated and if the results are not valid it throws an exception. Declaration public static IServiceCollection Configure<TOptions>(this IServiceCollection serviceCollection, IConfiguration configuration) where TOptions : class, new() Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration to use for the operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together. Type Parameters Name Description TOptions The type of associated options. Exceptions Type Condition System.ComponentModel.DataAnnotations.ValidationException This exception is thrown if the options fail validation after the binding operation. Configure<TOptions>(IServiceCollection, IConfiguration, out TOptions) This method attempts to configure the specified options as a singleton service with the specified service collection. The options are validated and if the results are not valid it throws an exception. The validated options are returned in the options parameter. Declaration public static IServiceCollection Configure<TOptions>(this IServiceCollection serviceCollection, IConfiguration configuration, out TOptions options) where TOptions : class, new() Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration to use for the operation. TOptions options The bound and validated options instance. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together. Type Parameters Name Description TOptions The type of associated options. Exceptions Type Condition System.ComponentModel.DataAnnotations.ValidationException This exception is thrown if the options fail validation after the binding operation. TryConfigure<TOptions>(IServiceCollection, IConfiguration) This method attempts to configure the specified options as a singleton service with the specified service collection. The options are validated and if the results are not valid it returns false; otherwise it returns true. Declaration public static bool TryConfigure<TOptions>(this IServiceCollection serviceCollection, IConfiguration configuration) where TOptions : class, new() Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration to use for the operation. Returns Type Description System.Boolean True if the options were configured; false otherwise. Type Parameters Name Description TOptions The type of associated options. TryConfigure<TOptions>(IServiceCollection, IConfiguration, out TOptions) This method attempts to configure the specified options as a singleton service with the specified service collection. The options are validated and if the results are not valid it returns false; otherwise it returns true. The validated options are returned in the options parameter. Declaration public static bool TryConfigure<TOptions>(this IServiceCollection serviceCollection, IConfiguration configuration, out TOptions options) where TOptions : class, new() Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration to use for the operation. TOptions options The options that were created by the operation. Returns Type Description System.Boolean True if the options were configured; false otherwise. Type Parameters Name Description TOptions The type of associated options."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.Options.dll contains extensions for application options that are used by other CodeGator packages."
  }
}