{
  "api/CG.Options.html": {
    "href": "api/CG.Options.html",
    "title": "Namespace CG.Options",
    "keywords": "Namespace CG.Options Classes OptionsException This class represents an options related exception."
  },
  "api/CG.Options.OptionsException.html": {
    "href": "api/CG.Options.OptionsException.html",
    "title": "Class OptionsException",
    "keywords": "Class OptionsException This class represents an options related exception. Inheritance System.Object OptionsException Namespace : CG.Options Assembly : CG.Options.dll Syntax public class OptionsException : Exception Constructors OptionsException() This constructor creates a new instance of the OptionsException class. Declaration public OptionsException() OptionsException(SerializationInfo, StreamingContext) This constructor creates a new instance of the OptionsException class. Declaration public OptionsException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The serialization info to use for the exception. StreamingContext context The streaming context to use for the exception. OptionsException(String) This constructor creates a new instance of the OptionsException class. Declaration public OptionsException(string message) Parameters Type Name Description System.String message The message to use for the exception. OptionsException(String, Exception) This constructor creates a new instance of the OptionsException class. Declaration public OptionsException(string message, Exception innerException) Parameters Type Name Description System.String message The message to use for the exception. Exception innerException An optional inner exception reference."
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type."
  },
  "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions",
    "keywords": "Class ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type. Inheritance System.Object ServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.DependencyInjection Assembly : CG.Options.dll Syntax public static class ServiceCollectionExtensions Methods ConfigureOptions<TOptions>(IServiceCollection, TOptions) This method configures the specified TOptions object as a singleton service. Declaration public static IServiceCollection ConfigureOptions<TOptions>(this IServiceCollection serviceCollection, TOptions options) where TOptions : class, new() Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. TOptions options The options to use for the operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together. Type Parameters Name Description TOptions The type of associated options. ConfigureOptions<TOptions>(IServiceCollection, IConfiguration) This method configures the specified TOptions object as a singleton service. Declaration public static IServiceCollection ConfigureOptions<TOptions>(this IServiceCollection serviceCollection, IConfiguration configuration) where TOptions : class, new() Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. IConfiguration configuration The configuration to use for the operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together. Type Parameters Name Description TOptions The type of associated options. ConfigureOptions<TOptions>(IServiceCollection, IConfiguration, out TOptions) This method configures the specified TOptions object as a singleton service. parameter. Declaration public static IServiceCollection ConfigureOptions<TOptions>(this IServiceCollection serviceCollection, IConfiguration configuration, out TOptions options) where TOptions : class, new() Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. IConfiguration configuration The configuration to use for the operation. TOptions options The bound and validated options instance. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together. Type Parameters Name Description TOptions The type of associated options. ConfigureOptions<TOptions, TImplementation>(IServiceCollection, IConfiguration) This method configures the specified TOptions object as a singleton service. Declaration public static IServiceCollection ConfigureOptions<TOptions, TImplementation>(this IServiceCollection serviceCollection, IConfiguration configuration) where TOptions : class where TImplementation : class, TOptions, new() Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. IConfiguration configuration The configuration to use for the operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together. Type Parameters Name Description TOptions The type of associated options. TImplementation The type of associated options interface. ConfigureOptions<TOptions, TImplementation>(IServiceCollection, IConfiguration, out TOptions) This method configures the specified TOptions object as a singleton service. parameter. Declaration public static IServiceCollection ConfigureOptions<TOptions, TImplementation>(this IServiceCollection serviceCollection, IConfiguration configuration, out TOptions options) where TOptions : class where TImplementation : class, TOptions, new() Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. IConfiguration configuration The configuration to use for the operation. TOptions options The bound and validated options instance. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together. Type Parameters Name Description TOptions The type of associated options. TImplementation The type of associated options interface. TryConfigureOptions<TOptions>(IServiceCollection, TOptions) This method attempts to configure the specified TOptions object as a singleton service. Declaration public static bool TryConfigureOptions<TOptions>(this IServiceCollection serviceCollection, TOptions options) where TOptions : class, new() Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. TOptions options The options to use for the operation. Returns Type Description System.Boolean True if the options were configured; false otherwise. Type Parameters Name Description TOptions The type of associated options. TryConfigureOptions<TOptions>(IServiceCollection, IConfiguration) This method attempts to configure the specified TOptions object as a singleton service. Declaration public static bool TryConfigureOptions<TOptions>(this IServiceCollection serviceCollection, IConfiguration configuration) where TOptions : class, new() Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. IConfiguration configuration The configuration to use for the operation. Returns Type Description System.Boolean True if the options were configured; false otherwise. Type Parameters Name Description TOptions The type of associated options. TryConfigureOptions<TOptions>(IServiceCollection, IConfiguration, out TOptions) This method attempts to configure the specified TOptions object as a singleton service. Declaration public static bool TryConfigureOptions<TOptions>(this IServiceCollection serviceCollection, IConfiguration configuration, out TOptions options) where TOptions : class, new() Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. IConfiguration configuration The configuration to use for the operation. TOptions options The options that were created by the operation. Returns Type Description System.Boolean True if the options were configured; false otherwise. Type Parameters Name Description TOptions The type of associated options. TryConfigureOptions<TOptions, TImplementation>(IServiceCollection, TImplementation) This method attempts to configure the specified TOptions object as a singleton service. Declaration public static bool TryConfigureOptions<TOptions, TImplementation>(this IServiceCollection serviceCollection, TImplementation options) where TOptions : class where TImplementation : class, TOptions, new() Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. TImplementation options The options to use for the operation. Returns Type Description System.Boolean True if the options were configured; false otherwise. Type Parameters Name Description TOptions The type of associated options. TImplementation The type of associated options interface. TryConfigureOptions<TOptions, TImplementation>(IServiceCollection, IConfiguration) This method attempts to configure the specified TOptions object as a singleton service. Declaration public static bool TryConfigureOptions<TOptions, TImplementation>(this IServiceCollection serviceCollection, IConfiguration configuration) where TOptions : class where TImplementation : class, TOptions, new() Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. IConfiguration configuration The configuration to use for the operation. Returns Type Description System.Boolean True if the options were configured; false otherwise. Type Parameters Name Description TOptions The type of associated options. TImplementation The type of associated options interface. TryConfigureOptions<TOptions, TImplementation>(IServiceCollection, IConfiguration, out TImplementation) This method attempts to configure the specified TOptions object as a singleton service. Declaration public static bool TryConfigureOptions<TOptions, TImplementation>(this IServiceCollection serviceCollection, IConfiguration configuration, out TImplementation options) where TOptions : class where TImplementation : class, TOptions, new() Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. IConfiguration configuration The configuration to use for the operation. TImplementation options The options that were created by the operation. Returns Type Description System.Boolean True if the options were configured; false otherwise. Type Parameters Name Description TOptions The type of associated options. TImplementation The type of associated options interface."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.Options.dll contains extensions for application options that are used by other CodeGator packages."
  }
}